{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/YourBotArmy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport BotCard from \"./BotCard\";\n\nfunction YourBotArmy(yourBot, setYourBot, bot) {\n  _s();\n\n  console.log(yourBot);\n  const [botArmy, setBotArmy] = useState(false);\n\n  const toggleArmyStatus = id => {\n    setBotArmy(!botArmy);\n    setYourBot(bot.map(bots => bots.id === id ? { ...bots,\n      armyBot: botArmy\n    } : bots));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment inverted olive bot-army\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui five column grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row bot-army-row\",\n        children: [\"Your Bot Army\", Array.from(yourBot).map(bot => bot.armyBot ? /*#__PURE__*/_jsxDEV(BotCard, {\n          toggleArmyStatus: toggleArmyStatus,\n          bot: bot\n        }, bot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 27\n        }, this) : null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(YourBotArmy, \"88PgtLxp6ow9UxT1Fvz13HH6GRQ=\");\n\n_c = YourBotArmy;\nexport default YourBotArmy;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"sources":["/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/YourBotArmy.js"],"names":["React","useState","BotCard","YourBotArmy","yourBot","setYourBot","bot","console","log","botArmy","setBotArmy","toggleArmyStatus","id","map","bots","armyBot","Array","from"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,UAA9B,EAA0CC,GAA1C,EAA+C;AAAA;;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAED,QAAMU,gBAAgB,GAAGC,EAAD,IAAQ;AAC7BF,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAJ,IAAAA,UAAU,CACRC,GAAG,CAACO,GAAJ,CAASC,IAAD,IACLA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGE,IAAL;AAAWC,MAAAA,OAAO,EAAEN;AAApB,KAAjB,GAAiDK,IADpD,CADQ,CAAV;AAKD,GAPF;;AASC,sBACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,oCAQGE,KAAK,CAACC,IAAN,CAAWb,OAAX,EAAoBS,GAApB,CAAyBP,GAAD,IACvBA,GAAG,CAACS,OAAJ,gBAAc,QAAC,OAAD;AAAsB,UAAA,gBAAgB,EAAEJ,gBAAxC;AAA2D,UAAA,GAAG,EAAEL;AAAhE,WAAcA,GAAG,CAACM,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAd,GAAuF,IADxF,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA/BQT,W;;KAAAA,W;AAiCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport BotCard from \"./BotCard\";\n\nfunction YourBotArmy(yourBot, setYourBot, bot) {\n  console.log(yourBot);\n  const [botArmy, setBotArmy] = useState(false);\n\n const toggleArmyStatus= (id) => {\n    setBotArmy(!botArmy);\n    setYourBot(\n      bot.map((bots) =>\n        (bots.id === id ? { ...bots, armyBot: botArmy } : bots)\n      )\n    );\n  }\n\n  return (\n    <div className=\"ui segment inverted olive bot-army\">\n      <div className=\"ui five column grid\">\n        <div className=\"row bot-army-row\">\n          {/*...and here...*/}\n          Your Bot Army\n          {/* it was givin me map is not a function const set = new Set(['one', 'two', 'three']); {Array.from(set).map(element => {\n          return (\n          <div key={element}>\n          <h2>{element}</h2>\n          </div>);})}*/}\n          {Array.from(yourBot).map((bot) =>\n            bot.armyBot ? <BotCard key={bot.id} toggleArmyStatus={toggleArmyStatus}  bot={bot}/> : null\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default YourBotArmy;\n"]},"metadata":{},"sourceType":"module"}