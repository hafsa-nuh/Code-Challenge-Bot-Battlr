{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Development/phase2-code-chanllenge/Code-Challenge-Bot-Battlr/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nconst url = \"http://localhost:8002/bots\";\n\nfunction BotsPage() {\n  _s();\n\n  const [collection, setCollection] = useState([]);\n  useEffect(() => {\n    fetch(url).then(r => r.json()).then(data => setCollection(data));\n  }, []); // a function for adding the collection to the your bot army section\n\n  const addToBotArmySection = bot => {\n    setCollection(collection.map(bots => bots.id === bot.id ? { ...bots,\n      addlist: true\n    } : bots));\n  }; // making the onclick button for removing the collection from both your bot army and bot collection\n\n\n  const removeCollection = bot => {\n    fetch(`http://localhost:8002/bots/${bot.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/JSON\"\n      }\n    }).then(r => {\n      if (r.ok) {\n        console.log('deleted');\n      } else {\n        console.log('not deleted');\n      }\n    });\n    setCollection(collection.filter(perBot => perBot.id !== bot.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      collection: collection,\n      setCollection: setCollection,\n      removeCollection: removeCollection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      collection: collection,\n      setCollection: setCollection,\n      removeCollection: removeCollection,\n      addList: addToBotArmySection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"PLk+KiaHBxRxt4nrjZfHxzEruCs=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/Users/admin/Development/phase2-code-chanllenge/Code-Challenge-Bot-Battlr/src/components/BotsPage.js"],"names":["React","useEffect","useState","YourBotArmy","BotCollection","url","BotsPage","collection","setCollection","fetch","then","r","json","data","addToBotArmySection","bot","map","bots","id","addlist","removeCollection","method","headers","ok","console","log","filter","perBot"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,GAAG,GAAG,4BAAZ;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACOC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADb,EAECF,IAFD,CAEOG,IAAD,IAAUL,aAAa,CAACK,IAAD,CAF7B;AAGD,GAJQ,EAIN,EAJM,CAAT,CAJkB,CAUlB;;AACA,QAAMC,mBAAmB,GAAIC,GAAD,IAAS;AACnCP,IAAAA,aAAa,CACXD,UAAU,CAACS,GAAX,CAAgBC,IAAD,IACbA,IAAI,CAACC,EAAL,KAAYH,GAAG,CAACG,EAAhB,GAAqB,EAAE,GAAGD,IAAL;AAAWE,MAAAA,OAAO,EAAC;AAAnB,KAArB,GAAgDF,IADlD,CADW,CAAb;AAKD,GAND,CAXkB,CAoBlB;;;AACA,QAAMG,gBAAgB,GAAIL,GAAD,IAAS;AAChCN,IAAAA,KAAK,CAAE,8BAA6BM,GAAG,CAACG,EAAG,EAAtC,EAAyC;AAC5CG,MAAAA,MAAM,EAAE,QADoC;AAE5CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFmC,KAAzC,CAAL,CAKGZ,IALH,CAKQC,CAAC,IAAG;AACV,UAAGA,CAAC,CAACY,EAAL,EAAQ;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAFD,MAEM;AACJD,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF,KAXD;AAYAjB,IAAAA,aAAa,CAACD,UAAU,CAACmB,MAAX,CAAmBC,MAAD,IAAYA,MAAM,CAACT,EAAP,KAAcH,GAAG,CAACG,EAAhD,CAAD,CAAb;AACD,GAdD;;AAgBA,sBACE;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,UAAU,EAAEX,UADd;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,gBAAgB,EAAEY;AAHpB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,aAAD;AACE,MAAA,UAAU,EAAEb,UADd;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,gBAAgB,EAAEY,gBAHpB;AAIE,MAAA,OAAO,EAAEN;AAJX;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApDQR,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nconst url = \"http://localhost:8002/bots\";\n\nfunction BotsPage() {\n  const [collection, setCollection] = useState([]);\n  \n\n  useEffect(() => {\n    fetch(url)\n    .then((r) => r.json())\n    .then((data) => setCollection(data));\n  }, []);\n\n  // a function for adding the collection to the your bot army section\n  const addToBotArmySection = (bot) => {\n    setCollection(\n      collection.map((bots) =>\n        bots.id === bot.id ? { ...bots, addlist:true }: bots \n      )\n    );\n  };\n\n\n  // making the onclick button for removing the collection from both your bot army and bot collection\n  const removeCollection = (bot) => {\n    fetch(`http://localhost:8002/bots/${bot.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/JSON\"\n      }\n    }).then(r=> {\n      if(r.ok){\n        console.log('deleted')\n      } else{\n        console.log('not deleted')\n      }\n    })\n    setCollection(collection.filter((perBot) => perBot.id !== bot.id));\n  };\n\n  return (\n    <div>\n      <YourBotArmy\n        collection={collection}\n        setCollection={setCollection}\n        removeCollection={removeCollection}\n      />\n      <BotCollection\n        collection={collection}\n        setCollection={setCollection}\n        removeCollection={removeCollection}\n        addList={addToBotArmySection}\n      />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}